package TFC.WorldGen.GenLayers;

import TFC.WorldGen.DataLayer;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.entity.*;
import net.minecraft.client.gui.inventory.*;
import net.minecraft.block.*;
import net.minecraft.block.material.*;
import net.minecraft.crash.*;
import net.minecraft.creativetab.*;
import net.minecraft.entity.*;
import net.minecraft.entity.ai.*;
import net.minecraft.entity.effect.*;
import net.minecraft.entity.item.*;
import net.minecraft.entity.monster.*;
import net.minecraft.entity.player.*;
import net.minecraft.entity.projectile.*;
import net.minecraft.inventory.*;
import net.minecraft.item.*;
import net.minecraft.nbt.*;
import net.minecraft.network.*;
import net.minecraft.network.packet.*;
import net.minecraft.pathfinding.*;
import net.minecraft.potion.*;
import net.minecraft.server.*;
import net.minecraft.stats.*;
import net.minecraft.tileentity.*;
import net.minecraft.util.*;
import net.minecraft.village.*;
import net.minecraft.world.*;
import net.minecraft.world.biome.*;
import net.minecraft.world.chunk.*;
import net.minecraft.world.gen.feature.*;
import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.IntCache;

public class GenLayerRockTypes extends GenLayerTFC
{
	public static DataLayer[] biomeArray1 = new DataLayer[] {DataLayer.Siltstone, DataLayer.Mudstone, DataLayer.Shale, DataLayer.Claystone, DataLayer.RockSalt, 
		DataLayer.Limestone, DataLayer.Conglomerate, DataLayer.Dolomite, DataLayer.Chert, DataLayer.Chalk,
		DataLayer.Rhyolite,DataLayer.Basalt,DataLayer.Andesite,DataLayer.Dacite,
		DataLayer.Quartzite,DataLayer.Slate,DataLayer.Phyllite,DataLayer.Schist,DataLayer.Gneiss,DataLayer.Marble, DataLayer.Granite, DataLayer.Diorite, DataLayer.Gabbro};


	/** this sets all the biomes that are allowed to appear in the overworld */
	private DataLayer[] allowedBiomes;

	public GenLayerRockTypes(long par1, GenLayer par3GenLayer, WorldType par4WorldType, int layer)
	{
		super(par1);

		this.allowedBiomes = biomeArray1;
		
		this.parent = (GenLayerTFC) par3GenLayer;
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
	 * amounts, or biomeList[] indices based on the particular GenLayer subclass.
	 */
	public int[] getInts(int par1, int par2, int par3, int par4)
	{
		int[] var5 = this.parent.getInts(par1, par2, par3, par4);
		int[] var6 = IntCache.getIntCache(par3 * par4);

		for (int var7 = 0; var7 < par4; ++var7)
		{
			for (int var8 = 0; var8 < par3; ++var8)
			{
				this.initChunkSeed((long)(var8 + par1), (long)(var7 + par2));
				int var9 = var5[var8 + var7 * par3];

				if (var9 == 0)
				{
					var6[var8 + var7 * par3] = this.allowedBiomes[this.nextInt(this.allowedBiomes.length)].ID;
				}
				else if (var9 == 1)
				{
					var6[var8 + var7 * par3] = this.allowedBiomes[this.nextInt(this.allowedBiomes.length)].ID;
				}
				else
					var6[var8 + var7 * par3] = 0;
			}
		}

		return var6;
	}
}
